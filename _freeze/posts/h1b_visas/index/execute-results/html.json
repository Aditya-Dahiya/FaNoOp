{
  "hash": "d5c4f59adbc527cce2b6a9236aa33fc5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"H1B Visas Insights Story\"\nauthor: \"Aditya Dahiya\"\neditor: visual\nsubtitle: \"A deep dive into the Data on H1B Visas released by USA\"\ndate: \"2024-10-14\"\ncategories: [analysis]\nimage: \"fig-2.png\"\neditor_options: \n  chunk_output_type: console\nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: false\n  echo: true\nfilters:\n  - social-share\nshare:\n  permalink: \"https://aditya-dahiya.github.io/FaNoOp/posts/h1b_visas/\"\n  description: \"H1B Visas in USA - analyzing the numbers and data\"\n  twitter: true\n  facebook: true\n  linkedin: true\n  email: true\nformat: \n  closeread-html:\n    code-fold: true\n    remove-header-space: true\n---\n\n\nThe H1B visa program enables U.S. companies to hire foreign workers in specialized fields, such as technology, with visas granted via an annual lottery. A recent [Bloomberg News](https://www.bloomberg.com/graphics-v2) investigation exposed how some companies exploited the lottery system, submitting multiple applications to increase their chances. The dataset used in this analysis, covering fiscal years 2021-2024, was obtained from [U.S. Citizenship and Immigration Services (USCIS)](https://www.uscis.gov/) through a [Freedom of Information Act (FOIA)](https://www.foia.gov/) request. The detailed dataset, including information on employers, job titles, salaries, and visa petitions, can be accessed on [GitHub](https://github.com/BloombergGraphics/2024-h1b-immigration-data).\n\n::: cr-section\nAlmost 60% applicants are from India, and as expected in the lottery approx 60% of all the H1B Visas go to Indians. @cr-fig1\n\n::: {#cr-fig1}\n![Most of the applicants are from India, and naturally most of the visas go to Indians.](fig-1.png){#fig-1}\n:::\n\nStates in USA where the selected H1B visa applicants went to show us that most of the selected visa applicants went on to work in California or Texas. @cr-fig2\n\n::: {#cr-fig2}\n![A map of USA with number of successful visa applicants working in each state.](fig-2.png){#fig-2}\n:::\n\nPopular Cities as destinations for H1B selected Visa applicants are New York City, followed by Seattle. @cr-fig3\n\n::: {#cr-fig3}\n![Most popular cities for worksites of successful H1B Visa applicants](fig-3.png){#fig-3}\n:::\n\nOccupations Sectors related to Computers and IT dominate the field of study for successful H1B Visa Applicants. @cr-fig4\n\n::: {#cr-fig4}\n![The top 150 fields of study for the successful H1B Selected VISA Applicants](fig-4.png){#fig-4}\n:::\n:::\n\nThis article and analysis is a work in progress, and new material will be added soon.\n\nThe code used to prepare these graphics is given below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Import and Wrangling Tools\nlibrary(tidyverse)            # All things tidy\n\n# Final plot tools\nlibrary(scales)               # Nice Scales for ggplot2\nlibrary(fontawesome)          # Icons display in ggplot2\nlibrary(ggtext)               # Markdown text support for ggplot2\nlibrary(showtext)             # Display fonts in ggplot2\nlibrary(patchwork)            # Combining plots\nlibrary(magick)               # Dealing with images\n\nlibrary(httr)                 # Download files\nlibrary(zip)                  # Handle ZIP files\nlibrary(countrycode)          # To get Country Codes\nlibrary(sf)                   # Mapping\n\n# Getting basic fonts etc. for the entire article\nfont_add_google(\"Ubuntu Condensed\", \"caption_font\")\nfont_add_google(\"Ubuntu\", \"body_font\")\nshowtext_auto()\ntext_col <- \"grey10\"\nbg_col = \"white\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get Data Dictionary used by Bloomberg\ndictionary <- openxlsx::read.xlsx(\n  \"https://github.com/BloombergGraphics/2024-h1b-immigration-data/raw/refs/heads/main/TRK_13139_I129_H1B_Registrations_FY21_FY24_FOIA_FIN.xlsx\",\n  sheet = \"Data Dictionary\",\n  rows = 1:57,\n  cols = 1:2\n) |> \n  janitor::clean_names()\n\n\n# Single registrations data\n# Download the ZIP file from the URL\nurl <- \"https://github.com/BloombergGraphics/2024-h1b-immigration-data/blob/main/TRK_13139_FY2024_single_reg.zip?raw=true\"\ntemp_zip <- tempfile(fileext = \".zip\")\nGET(url, write_disk(temp_zip, overwrite = TRUE))\n# Unzip the file to a temporary directory\ntemp_dir <- tempdir()\nunzip(temp_zip, exdir = temp_dir)\n# Read the CSV file into R\ncsv_file <- file.path(temp_dir, \"TRK_13139_FY2024_single_reg.csv\")\nrawdf_single <- read_csv(csv_file) |> \n  janitor::clean_names()\n\n# Multiple registrations data\nurl1 <- \"https://github.com/BloombergGraphics/2024-h1b-immigration-data/blob/main/TRK_13139_FY2024_multi_reg.zip?raw=true\"\ntemp_zip <- tempfile(fileext = \".zip\")\nGET(url1, write_disk(temp_zip, overwrite = TRUE))\n# Unzip the file to a temporary directory\ntemp_dir <- tempdir()\nunzip(temp_zip, exdir = temp_dir)\n# Read the CSV file into R\ncsv_file <- file.path(temp_dir, \"TRK_13139_FY2024_multi_reg.csv\")\nrawdf_multi <- read_csv(csv_file) |> \n  janitor::clean_names()\n\n# Clean up temporary files\nunlink(temp_zip)      # Delete the temporary zip file\n\n# Remove the temporary directory and its contents\n# unlink(temp_dir, recursive = TRUE)  \nrm(csv_file, temp_dir, temp_zip, url, url1)\n\nprint(object.size(rawdf_single), units = \"Mb\")\nprint(object.size(rawdf_multi), units = \"Mb\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- rawdf_single |>\n  filter(status_type == \"SELECTED\") |>\n  count(country_of_nationality, sort = T) |>\n  mutate(\n    country_of_nationality = fct(\n      countrycode(\n        country_of_nationality,\n        \"iso3c\",\n        \"country.name\"\n      )\n    ),\n    country_of_nationality = fct_lump_n(\n      country_of_nationality,\n      n = 10, w = n\n    )\n  ) |> \n  group_by(country_of_nationality) |> \n  summarise(n = sum(n)) |> \n  drop_na() |> \n  mutate(\n    perc = n / sum(n),\n    facet_var = \"H1B Visa: Selected and Granted\"\n  )\n\ndf2 <- rawdf_single |> \n  count(country_of_nationality, sort = T) |> \n  mutate(\n    country_of_nationality = fct(\n      countrycode(\n        country_of_nationality,\n        \"iso3c\",\n        \"country.name\"\n      )\n    ),\n    country_of_nationality = fct_lump_n(\n      country_of_nationality,\n      n = 10, w = n\n    )\n  ) |> \n  group_by(country_of_nationality) |> \n  summarise(n = sum(n)) |> \n  drop_na() |> \n  mutate(\n    perc = n / sum(n),\n    facet_var = \"Total applicants for H1B Visa\"\n  )\n\nbind_rows(\n  df1, df2\n) |> \n  mutate(\n    facet_var = fct(\n      facet_var,\n      levels = c(\n        unique(df2$facet_var),\n        unique(df1$facet_var)\n      )\n    )\n  ) |> \n  \n  # Start Plot\n  ggplot(\n    mapping = aes(\n      x = 1,\n      y = n,\n      fill = country_of_nationality\n    )\n  ) +\n  \n  # Bar / Pie\n  geom_col(\n    colour = \"white\",\n    width = 0.5,\n    linewidth = 0.2\n  ) +\n  \n  # Labels for the largest countries\n  geom_text(\n    mapping = aes(\n      x = 1.5,\n      label = paste0(\n        country_of_nationality,\n        \"\\n(\",\n        number(n),\n        \")\\n\",\n        percent(perc, accuracy = 0.1)\n      )\n    ),\n    position = position_stack(vjust = 0.5),\n    check_overlap = TRUE,\n    family = \"body_font\",\n    colour = text_col,\n    lineheight = 0.3\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"#E31A1CFF\",\n      paletteer::paletteer_d(\"rcartocolor::Pastel\"),\n      rep(\"grey50\", 10)\n    )\n  ) +\n  coord_radial(\n    theta = \"y\",\n    inner.radius = 0.5,\n    expand = FALSE\n  ) +\n  \n  facet_wrap(~facet_var, scales = \"free\") +\n  theme_void(\n    base_family = \"body_font\",\n    base_size = 14\n  ) +\n  theme(\n    legend.position = \"none\",\n    strip.text = element_text(\n      size = 25,\n      face = \"bold\"\n    )\n  )\n\nggsave(\n  filename = here::here(\"posts\", \"h1b_visas\", \"fig-1.png\"),\n  device = \"png\",\n  height = 700, width = 1200, units = \"px\", dpi = 320,\n  bg = bg_col\n)\n\nimage_read(here::here(\"posts\", \"h1b_visas\", \"fig-1.png\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplotdf2 <- usmapdata::us_map() |> \n  left_join(\n    rawdf_single |> \n      filter(status_type == \"SELECTED\") |> \n      count(worksite_state, sort = T) |> \n      drop_na() |> \n      rename(abbr = worksite_state)\n  )\n\nplotdf3 <- plotdf2 |> \n  st_centroid() |> \n  mutate(\n    lon = st_coordinates(geom)[, 1], # Extract longitude\n    lat = st_coordinates(geom)[, 2]  # Extract latitude\n    ) |> \n  mutate(\n    label_var = paste0(\n      number(n, big.mark = \",\"),\n      \"\\n(\", full, \")\"\n    )\n  ) |> \n  arrange(desc(n))\n\ng <- ggplot() +\n  geom_sf(\n    data = plotdf2,\n    aes(fill = n),\n    linewidth = 0.2,\n    colour = bg_col\n  ) +\n  geom_text(\n    data = plotdf3,\n    aes(\n      x = lon, y = lat,\n      label = label_var, \n      size = n),\n    family = \"body_font\",\n    fontface = \"bold\",\n    check_overlap = T,\n    lineheight = 0.25,\n    colour = text_col\n  ) +\n  paletteer::scale_fill_paletteer_c(\n    \"grDevices::PinkYl\",\n    direction = -1,\n    labels = label_number(),\n    breaks = seq(0, 16000, 4000)\n  ) +\n  scale_size(\n    range = c(3, 6)\n  ) +\n  guides(\n    size = \"none\"\n  ) +\n  labs(\n    fill = \"Number of selected H1B Visa applicants for worksite in the state\",\n  ) +\n  ggthemes::theme_map(\n    base_size = 20,\n    base_family = \"body_font\"\n  ) +\n  theme(\n    legend.position = \"bottom\",\n    legend.key.width = unit(10, \"mm\"),\n    legend.key.height = unit(1, \"mm\"),\n    plot.margin = margin(-20,0,-20,0, \"mm\"),\n    legend.margin = margin(-10,0,0,0, \"mm\"),\n    legend.title = element_text(\n      family = \"caption_font\",\n      margin = margin(0,0,2,0, \"mm\"),\n      hjust = 0.5\n    ),\n    legend.title.position = \"top\",\n    legend.text = element_text(\n      margin = margin(1,0,0,0, \"mm\")\n    ),\n    legend.justification = c(0.5, 1)\n  )\n\nggsave(\n  filename = here::here(\"posts\", \"h1b_visas\", \"fig-2.png\"),\n  device = \"png\",\n  height = 900, width = 1200, units = \"px\", dpi = 320,\n  bg = bg_col\n)\n\nimage_read(here::here(\"posts\", \"h1b_visas\", \"fig-2.png\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- rawdf_single |> \n  count(worksite_state, worksite_city, sort = T) |> \n  drop_na() |> \n  mutate(worksite_city = str_to_title(worksite_city)) |> \n  left_join(\n    usmapdata::us_map(regions = \"state\") |> \n      as_tibble() |> \n      select(abbr, full) |> \n      rename(worksite_state = abbr)\n  ) |> \n  slice_max(order_by = n, n = 15) |> \n  ggplot(\n    mapping = aes(\n      y = reorder(worksite_city, n),\n      x = n\n    )\n  ) + \n  geom_col(\n    fill = \"#F3946FFF\",\n    colour = \"transparent\"\n  ) +\n  geom_text(\n    mapping = aes(\n      label = paste0(worksite_city, \", \", full),\n      x = 10\n    ),\n    hjust = 0,\n    family = \"caption_font\"\n  ) +\n  geom_text(\n    mapping = aes(\n      label = number(n, big.mark = \",\")\n    ),\n    nudge_x = 50,\n    hjust = 0,\n    colour = text_col,\n    family = \"body_font\",\n    fontface = \"bold\"\n  ) +\n  coord_cartesian(clip = \"off\") +\n  theme_void(\n    base_size = 20,\n    base_family = \"body_font\"\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 5000, 1000),\n    labels = seq(0, 5000, 1000),\n    expand = expansion(c(0,0.1))\n  ) +\n  labs(\n    x = \"Number of successful H1B Visa applicants working in the city\"\n  ) +\n  theme(\n    text = element_text(\n      colour = text_col\n    ),\n    axis.line.x = element_line(\n      linetype = 3,\n      linewidth = 0.2\n    ),\n    axis.text.x = element_text(\n      margin = margin(1,0,0,0, \"mm\")\n    ),\n    axis.ticks.x = element_line(\n      linetype = 1,\n      linewidth = 0.2\n    ),\n    axis.ticks.length.x = unit(0.5, \"mm\"),\n    axis.title.x = element_text(\n      family = \"caption_font\",\n      margin = margin(2,0,1,0, \"mm\")\n    ),\n    plot.margin = margin(2,2,2,2, \"mm\")\n  )\n\n\nggsave(\n  filename = here::here(\"posts\", \"h1b_visas\", \"fig-3.png\"),\n  device = \"png\",\n  height = 900, width = 900, units = \"px\", dpi = 320,\n  bg = bg_col\n)\n\nimage_read(here::here(\"posts\", \"h1b_visas\", \"fig-3.png\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmypal <- paletteer::paletteer_d(\"khroma::stratigraphy\")\nmypal <- sample(\n  mypal,\n  size = length(mypal),\n  replace = FALSE)\n\ng <- rawdf_single |> \n  count(ben_pfield_of_study, sort = T) |> \n  drop_na() |> \n  mutate(\n    ben_pfield_of_study = str_to_title(ben_pfield_of_study),\n    ben_pfield_of_study = fct(ben_pfield_of_study),\n    ben_pfield_of_study = fct_lump_n(\n      ben_pfield_of_study, \n      w = n, \n      n = 150\n    )\n  ) |> \n  group_by(ben_pfield_of_study) |> \n  summarise(n = sum(n)) |> \n  filter(ben_pfield_of_study != \"Other\") |> \n  ggplot(\n    mapping = aes(\n      area = n,\n      fill = ben_pfield_of_study,\n      label = str_wrap(paste0(ben_pfield_of_study, \" (\", n, \")\"), 10)\n    )\n  ) +\n  treemapify::geom_treemap(\n    start = \"topleft\",\n    alpha = 0.9,\n    colour = bg_col\n  ) +\n  treemapify::geom_treemap_text(\n    colour = text_col,\n    family = \"caption_font\",\n    place = \"centre\",\n    min.size = 2,\n    start = \"topleft\",\n    lineheight = 0.25\n  ) +\n  scale_fill_manual(values = mypal) +\n  theme(\n    legend.position = \"none\"\n  )\n\nggsave(\n  filename = here::here(\"posts\", \"h1b_visas\", \"fig-4.png\"),\n  device = \"png\",\n  height = 1500, width = 1500, units = \"px\", dpi = 320,\n  bg = bg_col\n)\n\nimage_read(here::here(\"posts\", \"h1b_visas\", \"fig-4.png\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nus_zip_shp <- tigris::zctas(\n  cb = TRUE,\n  year = 2020\n)\n\nplotdf <- rawdf_single |> \n  filter(status_type == \"SELECTED\") |> \n  count(worksite_zip, sort = T) |> \n  drop_na() |>\n  mutate(\n    zip_code = str_sub(worksite_zip, start = 1, end = 5)\n  ) |> \n  group_by(zip_code) |> \n  summarise(n = sum(n)) |> \n  left_join(\n    us_zip_shp,\n    by = join_by(\n      \"zip_code\" == \"ZCTA5CE20\"\n    )\n  ) |> \n  select(zip_code, n, geometry) |> \n  st_as_sf() |> \n  usmap::usmap_transform()\n  \ng <- ggplot() +\n  geom_sf(\n    data = plotdf,\n    mapping = aes(\n      fill = n\n    ),\n    colour = \"transparent\",\n    linewidth = 1\n  ) +\n  paletteer::scale_fill_paletteer_c(\n    \"grDevices::PuBu\",\n    direction = -1,\n    trans = \"log10\"\n    ) +\n  ggthemes::theme_map() +\n  theme(\n    legend.position = \"bottom\"\n  )\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}